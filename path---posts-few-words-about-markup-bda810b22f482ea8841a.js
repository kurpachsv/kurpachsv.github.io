webpackJsonp([0xfde982bde658],{377:function(t,e){t.exports={data:{site:{siteMetadata:{title:"Блог Курпача Сергея",subtitle:"Заметки, мысли и идеи IT-тематики и не только",copyright:"2018, © Все права защищены",author:{name:"Сергей Курпач",twitter:"kurpachsv"},disqusShortname:"kurpachsv",url:"https://kurpachsv.com"}},markdownRemark:{id:"/Users/kurpachsv/projects/kurpachsv.github.io/src/pages/articles/2018-02-06---About-Html-Markup/index.md absPath of file >>> MarkdownRemark",html:'<p>Я относительно недавно начал заниматься версткой и являюсь в этом вопросе скорее малоопытным учеником. Но поверстав немного, решил поделиться некоторыми соображениями по этому вопросу. Речь пойдет о том, как готовить разметку.</p>\n<h2>Несколько определений</h2>\n<p>Разметка – создание структуры HTML-страницы. Вообще говоря, разметка должна быть простая (минимум сущностей для описания структур) и логичная (адекватное именование классов для тегов).</p>\n<p>Хорошая разметка начинается с процесса декомпозиции страницы на части, от крупных блоков к мелким. Выбору подходящих тегов и имен классов.</p>\n<p>Для того, чтобы выбрать имя класса нужно ответить на вопрос: что делает этот элемент, а не как выглядит, хотя в некоторых случаях это правило можно нарушить.</p>\n<p>Ну а вообще, для выбора адекватного имени в коде (не только классов для тегов) должны присутствовать описательные навыки (в этом, кстати, помогает чтение художественной литературы) и некоторое знание английского.</p>\n<h2>Tools</h2>\n<p>Любая разметка должна быть валидная. Проверять можно на сервисах валидации: <a href="https://validator.w3.org">https://validator.w3.org</a> (и более мягкий <a href="https://validator.w3.org/nu">https://validator.w3.org/nu</a>), например, через плагины в редакторах (для Sublime Text – это <a href="https://github.com/dubharmonic/Sublime-W3CValidators">Sublime-W3CValidators</a>).</p>\n<p>В проекте необходимо предерживаться единообразного стиля написания кода. Например, взять и использовать код-гайд от «HTML Academy» <a href="https://github.com/htmlacademy/codeguide">https://github.com/htmlacademy/codeguide</a>, настроив предварительно свой любимый редактор.</p>\n<h2>Некоторые замечания по именованию CSS-классов:</h2>\n<ul>\n<li>использовать <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%81%D1%82%D1%80%D0%B0%D0%BD%D1%81%D1%82%D0%B2%D0%BE_%D0%B8%D0%BC%D1%91%D0%BD_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)"><strong>namespaces</strong></a></li>\n<li>если элемент с классом может использоваться где еще в верстке или вообще в другом приложении (компонент), то не префиксовать (<em>user-block</em>, <em>search-block</em>, etc)</li>\n<li>если вероятность появления класса дочернего элемента где-то еще низкая (потенциальный компонент), то лучше не префиксовать классом родителя</li>\n<li>если вероятность появления класса дочернего элемента высокая (title, desc, etc), то префиксуем (составная часть компонента)</li>\n<li>если не удается выбрать содержательное имя класса, то выбирать приемлемое имя, например как расположен относительно других (<em>…-left</em>, <em>…-right</em>, <em>…-top</em>, <em>…-mid</em>, <em>…-bottom</em>, etc) и префиксуем</li>\n</ul>\n<p>Ну и список часто употрибимых классов можно найти здесь:</p>\n<ul>\n<li><a href="https://github.com/yoksel/common-words">https:  //github.com/yoksel/common-words</a></li>\n</ul>\n<p>Спасибо за внимание!</p>',fields:{tagSlugs:["/tags/ui-development/","/tags/thinking/"]},frontmatter:{title:"Пара слов о HTML-разметке",tags:["ui-development","thinking"],date:"2018-06-02",description:""}}},pathContext:{slug:"/posts/few-words-about-markup/"}}}});
//# sourceMappingURL=path---posts-few-words-about-markup-bda810b22f482ea8841a.js.map